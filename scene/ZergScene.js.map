{"version":3,"file":"ZergScene.js","sourceRoot":"","sources":["../../src/scene/ZergScene.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,KAAK,EAAE,MAAM,0BAA0B,CAAC;AAEjD,OAAO,EAAE,MAAM,EAAE,MAAM,mBAAmB,CAAC;AAC3C,OAAO,EAAE,cAAc,EAAE,MAAM,gBAAgB,CAAC;AAGhD,MAAM,CAAN,IAAY,KAGX;AAHD,WAAY,KAAK;IACb,qCAAM,CAAA;IACN,mCAAK,CAAA;AACT,CAAC,EAHW,KAAK,KAAL,KAAK,QAGhB;AAED,MAAM,OAAO,SAAU,SAAQ,KAAc;IAOzC,YAAY,KAAkB,EAAE,YAA4B,EAAE,WAA2B,EAAE,UAA8B,EAAE,eAAuB,CAAC;QAC/I,MAAM,MAAM,GAAG,IAAI,GAAG,CAAC;YACnB,EAAE,OAAO,EAAE,CAAC,EAAE,QAAQ,EAAE,GAAG,EAAE,QAAQ,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,UAAU,EAAE,EAAE;YAChE,EAAE,OAAO,EAAE,GAAG,EAAE,QAAQ,EAAE,IAAI,EAAE,QAAQ,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE;SACvE,CAAC,CAAC;QACH,KAAK,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;QAErB,IAAI,CAAC,aAAa,GAAG,YAAY,CAAC;QAClC,IAAI,CAAC,YAAY,GAAG,WAAW,CAAC;QAChC,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC;QAC9B,IAAI,CAAC,aAAa,GAAG,YAAY,CAAC;IACtC,CAAC;IAEM,OAAO;QACV,KAAK,CAAC,OAAO,EAAE,CAAC;QAEhB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC,EAAE;YACvC,IAAI,CAAC,WAAW,EAAE,CAAC;IAC3B,CAAC;IAEO,UAAU;QACd,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,OAAO,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,MAAM,IAAI,cAAc;YAC3F,OAAO;QAEX,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;IACvC,CAAC;IAEO,WAAW;QACf,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;IACxC,CAAC;IAEO,UAAU,CAAC,OAAuB;QACtC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,gBAAgB,EAAE,EAAE,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,EAAE,UAAU,EAAE,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC,CAAC,CAAC;IACxK,CAAC;IAEO,gBAAgB;QACpB,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;IAC7E,CAAC;CACJ","sourcesContent":["import { Scene } from \"../engine/scene/Scene.js\";\r\nimport { IEntity, IEntityFactory } from \"../entity/IEntity.js\";\r\nimport { isZerg } from \"../entity/Zerg.js\";\r\nimport { MAX_ZERG_COUNT } from \"./constants.js\";\r\nimport { IScoreBoard } from \"../engine/ui/IScoreBoard.js\";\r\n\r\nexport enum Teams {\r\n    player,\r\n    zergs\r\n}\r\n\r\nexport class ZergScene extends Scene<IEntity> {\r\n\r\n    private _cargoFactory: IEntityFactory;\r\n    private _zergFactory: IEntityFactory;\r\n    private readonly _initialCargo: number;\r\n    private readonly _scoreBoard: IScoreBoard<Teams>;\r\n\r\n    constructor(board: HTMLElement, cargoFactory: IEntityFactory, zergFactory: IEntityFactory, scoreBoard: IScoreBoard<Teams>, initialCargo: number = 5) {\r\n        const events = new Set([\r\n            { elapsed: 0, interval: 500, callback: () => this._spawnZerg() },\r\n            { elapsed: 500, interval: 1000, callback: () => this._spawnCargo() }\r\n        ]);\r\n        super(board, events);\r\n\r\n        this._cargoFactory = cargoFactory;\r\n        this._zergFactory = zergFactory;\r\n        this._scoreBoard = scoreBoard;\r\n        this._initialCargo = initialCargo;\r\n    }\r\n\r\n    public prepare(): void {\r\n        super.prepare();\r\n\r\n        for (let i = 0; i < this._initialCargo; i++)\r\n            this._spawnCargo();\r\n    }\r\n\r\n    private _spawnZerg() {\r\n        if (this._objects.filter(o => isZerg(o.obj) && o.inScene && !o.remove).length >= MAX_ZERG_COUNT)\r\n            return;\r\n\r\n        this._spawnUnit(this._zergFactory);\r\n    }\r\n\r\n    private _spawnCargo() {\r\n        this._spawnUnit(this._cargoFactory);\r\n    }\r\n\r\n    private _spawnUnit(factory: IEntityFactory) {\r\n        this.add(factory(this._boundingRect, () => this._getSceneObjects(), obj => this.remove(obj), (team, adjustment) => this._scoreBoard.adjustScore(team, adjustment)));\r\n    }    \r\n\r\n    private _getSceneObjects(): ReadonlyArray<Readonly<IEntity>> {\r\n        return this._objects.filter(o => o.inScene && !o.remove).map(o => o.obj);\r\n    }\r\n}"]}