{"version":3,"file":"ZergAI.js","sourceRoot":"","sources":["../../src/ai/ZergAI.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,WAAW,EAAE,MAAM,6BAA6B,CAAC;AAE1D,OAAO,EAAE,QAAQ,EAAE,MAAM,kCAAkC,CAAC;AAC5D,OAAO,EAAE,OAAO,EAAE,MAAM,oBAAoB,CAAC;AAQ7C,MAAM,OAAO,MAAO,SAAQ,WAAW;IAMnC,YAAmB,gBAA8B,EAAE,KAAa,EAAE,MAAsB,EACpF,gBAA6D;QAE7D,KAAK,CAAC,gBAAgB,EAAE,KAAK,CAAC,CAAC;QAL3B,oBAAe,GAAW,CAAC,CAAC;QAOhC,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC;QAC7B,IAAI,CAAC,gBAAgB,GAAG,gBAAgB,CAAC;IAC7C,CAAC;IAEM,MAAM,CAAC,IAAY;QACtB,IAAI,CAAC,WAAW,EAAE,CAAC;QAEnB,IAAI,CAAC,IAAI,CAAC,MAAM;YACZ,OAAO;QAEX,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC;YACtB,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IAC3B,CAAC;IAEO,WAAW;QACf,MAAM,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,EAAE;aAC3C,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;aACvB,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;YACP,GAAG,EAAE,CAAC;YACN,IAAI,EAAE,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;SAC1D,CAAC,CAAC;aACF,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC;QAErC,IAAI,CAAC,MAAM,GAAG,gBAAgB,IAAI,gBAAgB,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,SAAS,CAAC;IACxG,CAAC;IAEM,UAAU,CAAC,IAAY;QAC1B,IAAI,CAAC,eAAe,IAAI,IAAI,CAAC;QAC7B,IAAI,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,cAAc,CAAC,QAAQ;YACnD,OAAO,KAAK,CAAC;QAEjB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC;YACrB,OAAO,KAAK,CAAC;QAEjB,IAAI,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC,QAAQ;YAC1F,OAAO,KAAK,CAAC;QAEjB,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;QAC5C,IAAI,CAAC,eAAe,GAAG,CAAC,CAAC;QACzB,OAAO,IAAI,CAAC;IAChB,CAAC;CACJ","sourcesContent":["import { FollowingAI } from \"../engine/ai/FollowingAI.js\";\r\nimport { ISceneObject } from \"../engine/scene/IScene.js\";\r\nimport { Position } from \"../engine/utils/MovementUtils.js\";\r\nimport { isCargo } from \"../entity/Cargo.js\";\r\n\r\ninterface IAttackOptions { \r\n    distance: number, \r\n    damage: number, \r\n    interval: number\r\n} \r\n\r\nexport class ZergAI extends FollowingAI {\r\n\r\n    private readonly _attackOptions: IAttackOptions;\r\n    private readonly _getSceneObjects: () => ReadonlyArray<Readonly<ISceneObject>>;\r\n    private _attackCooldown: number = 0;\r\n\r\n    public constructor(controlledObject: ISceneObject, speed: number, attack: IAttackOptions,\r\n        sceneObjectsFunc: () => ReadonlyArray<Readonly<ISceneObject>>) {\r\n\r\n        super(controlledObject, speed);\r\n        \r\n        this._attackOptions = attack;\r\n        this._getSceneObjects = sceneObjectsFunc;\r\n    }\r\n\r\n    public update(diff: number): void {\r\n        this._pickTarget();\r\n\r\n        if (!this.target)\r\n            return;\r\n\r\n        if (!this._tryAttack(diff))\r\n            super.update(diff);\r\n    }\r\n\r\n    private _pickTarget() {\r\n        const proximityObjects = this._getSceneObjects()\r\n            .filter(o => isCargo(o))\r\n            .map(o => ({ \r\n                obj: o,\r\n                dist: Position.distance(o.position, this._obj.position) \r\n            }))\r\n            .sort((a, b) => a.dist - b.dist);\r\n\r\n        this.target = proximityObjects && proximityObjects.length > 0 ? proximityObjects[0].obj : undefined;\r\n    }\r\n    \r\n    public _tryAttack(diff: number) {\r\n        this._attackCooldown += diff;\r\n        if (this._attackCooldown < this._attackOptions.interval)\r\n            return false;\r\n\r\n        if (!isCargo(this.target))\r\n            return false;\r\n\r\n        if (Position.distance(this.target.position, this._obj.position) > this._attackOptions.distance)\r\n            return false;\r\n\r\n        this.target.hit(this._attackOptions.damage);\r\n        this._attackCooldown = 0;\r\n        return true;\r\n    }    \r\n}"]}