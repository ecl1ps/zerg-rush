{"version":3,"file":"ControlPanel.js","sourceRoot":"","sources":["../../../src/engine/ui/ControlPanel.ts"],"names":[],"mappings":"AAQA,MAAM,OAAO,YAAY;IAKrB,YAAmB,IAAiB,EAAE,OAAoB,EAAE,KAAmC,EAC3F,gBAAmD;QAJtC,YAAO,GAAoD,IAAI,GAAG,EAAE,CAAC;QAMlF,IAAI,CAAC,iBAAiB,GAAG,gBAAgB,CAAC;QAE1C,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;QAEjC,MAAM,cAAc,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QACrD,KAAK,MAAM,CAAC,IAAI,KAAK,EAAE;YACnB,MAAM,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;YAC7C,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YAC7B,MAAM,SAAS,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;YAChD,SAAS,CAAC,SAAS,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;YACjC,SAAS,CAAC,WAAW,GAAG,CAAC,CAAC,KAAK,CAAC;YAChC,MAAM,SAAS,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;YAChD,SAAS,CAAC,SAAS,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;YACjC,SAAS,CAAC,WAAW,GAAG,GAAG,CAAC;YAE5B,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,OAAO,EAAE,SAAS,EAAE,CAAC,CAAC;YAE3D,MAAM,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;YAC9B,MAAM,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;YAC9B,cAAc,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;SACtC;QACD,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,CAAC;QAEjC,MAAM,eAAe,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QACtD,KAAK,MAAM,CAAC,IAAI,OAAO,EAAE;YACrB,MAAM,QAAQ,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;YAClD,QAAQ,CAAC,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YACjC,QAAQ,CAAC,WAAW,GAAG,CAAC,CAAC,KAAK,CAAC;YAC/B,QAAQ,CAAC,gBAAgB,CAAC,OAAO,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC;YAErD,eAAe,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;SACzC;QACD,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,CAAC;IACtC,CAAC;IAEM,WAAW,CAAC,IAAO,EAAE,UAAkB;QAC1C,MAAM,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAE,CAAC;QAC1C,SAAS,CAAC,KAAK,IAAI,UAAU,CAAC;QAC9B,SAAS,CAAC,OAAO,CAAC,WAAW,GAAG,SAAS,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QAE3D,IAAI,IAAI,CAAC,iBAAiB;YACtB,IAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE,SAAS,CAAC,KAAK,CAAC,CAAC;QAElD,OAAO,SAAS,CAAC,KAAK,CAAC;IAC3B,CAAC;IAEM,UAAU;QACb,KAAK,MAAM,SAAS,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE;YAC3C,SAAS,CAAC,KAAK,GAAG,CAAC,CAAC;YACpB,SAAS,CAAC,OAAO,CAAC,WAAW,GAAG,SAAS,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;SAC9D;IACL,CAAC;CACJ","sourcesContent":["import { IScoreBoard } from \"./IScoreBoard\";\r\n\r\nexport interface IUIAction {\r\n    title: string;\r\n    action: () => void;\r\n    classes?: string[]\r\n}\r\n\r\nexport class ControlPanel<T> implements IScoreBoard<T> {\r\n\r\n    private readonly _scores: Map<T, { score: number, element: HTMLElement }> = new Map();\r\n    private readonly _scoreChangedFunc: ((team: T, score: number) => void) | undefined;\r\n\r\n    public constructor(root: HTMLElement, actions: IUIAction[], teams: { type: T, title: string }[], \r\n        scoreChangedFunc?: (team: T, score: number) => void) {\r\n\r\n        this._scoreChangedFunc = scoreChangedFunc;\r\n\r\n        root.classList.add(\"scoreboard\");\r\n\r\n        const scoreContainer = document.createElement(\"div\");\r\n        for (const t of teams) {\r\n            const teamEl = document.createElement(\"div\");\r\n            teamEl.classList.add(\"team\");\r\n            const teamTitle = document.createElement(\"div\");\r\n            teamTitle.classList.add(\"title\");\r\n            teamTitle.textContent = t.title;\r\n            const teamScore = document.createElement(\"div\");\r\n            teamScore.classList.add(\"score\");\r\n            teamScore.textContent = \"0\"; \r\n\r\n            this._scores.set(t.type, { score: 0, element: teamScore });\r\n            \r\n            teamEl.appendChild(teamTitle);\r\n            teamEl.appendChild(teamScore);\r\n            scoreContainer.appendChild(teamEl);\r\n        }\r\n        root.appendChild(scoreContainer);\r\n\r\n        const actionContainer = document.createElement(\"div\");\r\n        for (const a of actions) {\r\n            const actionEl = document.createElement(\"button\");\r\n            actionEl.classList.add(\"action\");\r\n            actionEl.textContent = a.title;\r\n            actionEl.addEventListener(\"click\", () => a.action());\r\n\r\n            actionContainer.appendChild(actionEl);\r\n        }\r\n        root.appendChild(actionContainer);  \r\n    }\r\n\r\n    public adjustScore(team: T, adjustment: number): number {\r\n        const scoreData = this._scores.get(team)!;\r\n        scoreData.score += adjustment;\r\n        scoreData.element.textContent = scoreData.score.toFixed(0);\r\n        \r\n        if (this._scoreChangedFunc)\r\n            this._scoreChangedFunc(team, scoreData.score);\r\n\r\n        return scoreData.score;\r\n    }\r\n\r\n    public clearScore(): void {\r\n        for (const scoreData of this._scores.values()) {\r\n            scoreData.score = 0;\r\n            scoreData.element.textContent = scoreData.score.toFixed(0);            \r\n        }\r\n    }    \r\n}"]}